[{"E:\\My Projects\\React-Hooks-Tutorial\\src\\index.js":"1","E:\\My Projects\\React-Hooks-Tutorial\\src\\reportWebVitals.js":"2","E:\\My Projects\\React-Hooks-Tutorial\\src\\App.js":"3","E:\\My Projects\\React-Hooks-Tutorial\\src\\useForm.js":"4","E:\\My Projects\\React-Hooks-Tutorial\\src\\Hello.js":"5","E:\\My Projects\\React-Hooks-Tutorial\\src\\useFetch.js":"6","E:\\My Projects\\React-Hooks-Tutorial\\src\\useMeasure.js":"7","E:\\My Projects\\React-Hooks-Tutorial\\src\\HelloCallback.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":2029,"mtime":1614502054240,"results":"12","hashOfConfig":"10"},{"size":287,"mtime":1611849705848,"results":"13","hashOfConfig":"10"},{"size":1380,"mtime":1614428939965,"results":"14","hashOfConfig":"10"},{"size":711,"mtime":1612365438563,"results":"15","hashOfConfig":"10"},{"size":413,"mtime":1614428939966,"results":"16","hashOfConfig":"10"},{"size":360,"mtime":1614502688155,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"152n28x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\My Projects\\React-Hooks-Tutorial\\src\\index.js",[],["36","37"],"E:\\My Projects\\React-Hooks-Tutorial\\src\\reportWebVitals.js",[],"E:\\My Projects\\React-Hooks-Tutorial\\src\\App.js",[],"E:\\My Projects\\React-Hooks-Tutorial\\src\\useForm.js",[],"E:\\My Projects\\React-Hooks-Tutorial\\src\\Hello.js",["38"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { useFetch } from \"./useFetch\";\r\nimport { useMeasure } from \"./useMeasure\";\r\n\r\nexport const Hello = () => {\r\n  // We can use useRef to store any value\r\n  const renders = useRef(0);\r\n\r\n  console.log(\"Hello renders: \", renders.current++);\r\n\r\n  const [count, setCount] = useState(\r\n    // Use the initializer function of useState to reduce from running at every single render\r\n    () => JSON.parse(localStorage.getItem(\"count\")) || 0\r\n  );\r\n\r\n  const { data, loading } = useFetch(`http://numbersapi.com/${count}/trivia`);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"count\", JSON.stringify(count));\r\n  }, [count]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"render\");\r\n\r\n    // Cleanup function (called when the component disappears or cleans up the old value and replace it with the new value)\r\n    return () => {\r\n      console.log(\"Unmount\");\r\n    };\r\n  }, []);\r\n\r\n  const [rect, divRef] = useMeasure([data]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setCount((c) => c + 1)}>Count +</button>\r\n      <button onClick={() => setCount((c) => (c >= 1 ? c - 1 : c))}>Count -</button>\r\n      <div>Count: {count}</div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div ref={divRef}>{!data ? \"Loading...\" : data}</div>\r\n      </div>\r\n      <pre>{JSON.stringify(rect, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n","E:\\My Projects\\React-Hooks-Tutorial\\src\\useFetch.js",[],"E:\\My Projects\\React-Hooks-Tutorial\\src\\useMeasure.js",[],"E:\\My Projects\\React-Hooks-Tutorial\\src\\HelloCallback.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":16,"column":17,"nodeType":"45","messageId":"46","endLine":16,"endColumn":24},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]